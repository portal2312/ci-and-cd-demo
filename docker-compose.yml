# https://docs.docker.com/reference/compose-file/version-and-name/
name: ci-and-cd-demo

# https://docs.docker.com/reference/compose-file/services/
services:
  actions-runner:
    # https://docs.docker.com/reference/compose-file/services/#build
    build:
      context: ./actions-runner
      dockerfile: Dockerfile
      args:
        RUNNER_VERSION: ${RUNNER_VERSION}
    tty: true
    stdin_open: true
    restart: unless-stopped
    # https://docs.docker.com/reference/compose-file/services/#volumes
    volumes:
      - actions-runner-data:/actions-runner
      - /var/run/docker.sock:/var/run/docker.sock
    # https://docs.docker.com/reference/compose-file/services/#environment
    environment:
      - RUNNER_URL=${RUNNER_URL}
      - RUNNER_TOKEN=${RUNNER_TOKEN}
      - RUNNER_NAME=${RUNNER_NAME}
      - RUNNER_LABELS=${RUNNER_LABELS}

  jenkins:
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    restart: unless-stopped

  nexus:
    # https://docs.docker.com/reference/compose-file/services/#image
    image: sonatype/nexus3
    ports:
      - 8081:8081
    volumes:
      - nexus-data:/nexus-data
    restart: unless-stopped

# https://docs.docker.com/reference/compose-file/volumes/
volumes:
  # 다음과 같은 이유로 볼륨을 사용:
  # - Runner 의 config.sh 실행 후, 생성 된 파일 보존을 위해
  # - Runner 의 Token 유지를 위해
  actions-runner-data:
  nexus-data:
  jenkins_data:
